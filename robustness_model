{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"robustness_model","provenance":[{"file_id":"/v2/external/notebooks/empty.ipynb","timestamp":1619498000732}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lIYdn1woOS1n","executionInfo":{"status":"ok","timestamp":1619492934106,"user_tz":-360,"elapsed":6651,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"1fa1c1a2-b3e5-48eb-8f35-a11b47106982"},"source":["!pip install gurobipy"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting gurobipy\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/01/4a/31c1ac445352f5c7e73afe9a0a013b3f4de955826c28bebfc3e44d30b11b/gurobipy-9.1.2-cp37-cp37m-manylinux1_x86_64.whl (11.1MB)\n","\u001b[K     |████████████████████████████████| 11.1MB 10.7MB/s \n","\u001b[?25hInstalling collected packages: gurobipy\n","Successfully installed gurobipy-9.1.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"F2ABT8odTDBW"},"source":["import gurobipy as gp\n","from gurobipy import GRB"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2MaZ1IGxTc6M"},"source":["I = ['i1', 'i2', 'i3'] \n","J = ['j1', 'j2']\n","M = [str(m) for m in range(1, 10)]\n","P = ['rice']\n","S = ['scenario1', 'scenario2', 'scenario3', 'scenario4']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lfnd8xjrgNdN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619496342898,"user_tz":-360,"elapsed":1197,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"f38eadfd-3e79-483a-aa4d-75a1f593cd3d"},"source":["# Fixed cost of opening a DC at location j\n","j, Bj = gp.multidict({    \n","    ('j1') : 500,\n","    ('j2') : 500,\n","    ('j3') : 500\n","})\n","\n","# FIxed cost of opening a retailer at candidate location m\n","m, Cm = gp.multidict({    \n","    ('1') : 90,\n","    ('2') : 90,\n","    ('3') : 120,\n","    ('4') : 90,\n","    ('5') : 120,\n","    ('6') : 90,\n","    ('7') : 90,\n","    ('8') : 85,\n","    ('9') : 85\n","})\n","\n","# Expected demand of product p in market m\n","m, EDmp = gp.multidict({    \n","    ('1') : 300,\n","    ('2') : 220,\n","    ('3') : 500,\n","    ('4') : 200,\n","    ('5') : 500,\n","    ('6') : 250,\n","    ('7') : 200,\n","    ('8') : 150,\n","    ('9') : 150\n","})\n","\n","# Capacity of manufacturer i for product p\n","i, capip = gp.multidict({    \n","    ('i1') : 1000,\n","    ('i2') : 1000,\n","    ('i3') : 1000\n","})\n","\n","# Certain budget limit\n","budg = 2000\n","\n","# Prince of one unit of product p in market m\n","mp, Pmp = gp.multidict({\n","    ('1', 'rice') : 10,\n","    ('2', 'rice') : 10,\n","    ('3', 'rice') : 10,\n","    ('4', 'rice') : 10,\n","    ('5', 'rice') : 10,\n","    ('6', 'rice') : 10,\n","    ('7', 'rice') : 10,\n","    ('8', 'rice') : 10,\n","    ('9', 'rice') : 10\n","        \n","})\n","\n","# Salvage value\n","mp, SVmp = gp.multidict({\n","    ('1', 'rice') : 0,\n","    ('2', 'rice') : 0,\n","    ('3', 'rice') : 0,\n","    ('4', 'rice') : 0,\n","    ('5', 'rice') : 0,\n","    ('6', 'rice') : 0,\n","    ('7', 'rice') : 0,\n","    ('8', 'rice') : 0,\n","    ('9', 'rice') : 0      \n","})\n","\n","\n","# Shortage cost\n","mp, SCmp = gp.multidict({\n","    ('1', 'rice') : 0.1,\n","    ('2', 'rice') : 0.1,\n","    ('3', 'rice') : 0.1,\n","    ('4', 'rice') : 0.1,\n","    ('5', 'rice') : 0.1,\n","    ('6', 'rice') : 0.1,\n","    ('7', 'rice') : 0.1,\n","    ('8', 'rice') : 0.1,\n","    ('9', 'rice') : 0.1\n","        \n","})\n"," \n","\n","# Handaling cost\n"," t, Mt = gp.multidict({\n","    ('i1', 'j1', '1'): 9.25,\n","    ('i1', 'j1', '2'): 9.0,\n","    ('i1', 'j2', '5'): 9.0,\n","    ('i2', 'j1', '2'): 8.5,\n","    ('i2', 'j2', '4'): 8.75,\n","    ('i2', 'j2', '7'): 8,25,\n","    ('i2', 'j3', '6'): 8.0,\n","    ('i3', 'j1', '3'): 8.5,\n","    ('i3', 'j2', '5'): 8.75,\n","    ('i3', 'j2', '6'): 8.25,\n","    ('i3', 'j3', '7'): 7.5,\n","    ('i3', 'j3', '8'): 7.75,\n","    ('i3', 'j3', '9'): 8.0 \n","})\n","\n","# Probability of each scenario\n","s, Prs = gp.mutidict({\n","    ('scenario1'): 0.725 ,\n","    ('scenario2'): 0.05,\n","    ('scenario3'): 0.15,\n","    ('scenario4'): 0.075,\n","})\n","\n","# Binary parameter equal to 1 if route t is usable \n","st, BPst = \n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['1', '2', '3', '4', '5', '6', '7', '8', '9']"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"ML_7zqkIgQ-t"},"source":[""],"execution_count":null,"outputs":[]}]}